openapi: 3.0.0
info:
  title: Task Management API
  description: API for managing tasks, including creation, assignment, and deletion.
  version: 1.0.0

servers:
  - url: https://api.example.com

paths:
  /api/task/tasks/:
    post:
      summary: Create a new task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                task_type:
                  type: string
                completed_at:
                  type: string
                  format: date-time
                status:
                  type: string
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    get:
      summary: Get all tasks for the logged-in user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

  /api/task/tasks/{task_id}:
    delete:
      summary: Delete a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: task_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task deleted successfully
    put:
      summary: Update a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: task_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                status:
                  type: string
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /api/task/assign/{task_id}:
    patch:
      summary: Assign or remove users from a task
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: task_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: array
                  items:
                    type: integer
                operation:
                  type: string
      responses:
        '200':
          description: Assignment updated successfully

  /api/task/by_assignee/{user_id}:
    get:
      summary: Get tasks assigned to a specific user
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of assigned tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

  /api/signup:
    post:
      summary: Create a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
                mobile:
                  type: string
                password:
                  type: string
                gender:
                  type: string
                position:
                  type: string
      responses:
        '201':
          description: User created successfully

  /api/login:
    post:
      summary: Authenticate a user and return tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  refresh:
                    type: string
                  access:
                    type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        task_type:
          type: string
        created_at:
          type: string
          format: date-time
        created_by:
          type: integer
        completed_at:
          type: string
          format: date-time
        status:
          type: string
        assignee:
          type: array
          items:
            type: integer